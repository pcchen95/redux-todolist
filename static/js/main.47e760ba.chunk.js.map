{"version":3,"sources":["redux/selectors.js","redux/actionTypes.js","redux/actions.js","components/AddTodo.js","components/TodoItem.js","components/FilterButton.js","App.js","redux/reducers/todos.js","redux/reducers/index.js","redux/store.js","serviceWorker.js","index.js"],"names":["selectTodos","store","todoState","todos","selectFilter","visibilityFilter","ADD_TODO","DELETE_TODO","TOGGLE_TODO","DELETE_ALL_TODO","UPDATE_TODO","SET_FILTER","setFilter","filter","type","payload","TodoInputForm","styled","div","TodoInput","input","AddTodo","dispatch","useDispatch","useState","value","setValue","placeholder","onChange","e","target","onKeyPress","key","name","TodoItemWrapper","props","isCompleted","TodoContentWrapper","TodoContent","Checkbox","ButtonDelete","TodoContentInput","TodoItem","todo","inputToggle","setInputToggle","id","onClick","onDoubleClick","content","BottomWrapper","StateButtonWrapper","StateButton","$active","DeleteAllButton","FilterButton","Main","main","TodoTitle","RemarkWord","App","todoData","todoFilter","useSelector","React","useEffect","window","localStorage","setItem","JSON","stringify","writeTodosToLocalStorage","map","todoId","getItem","parse","length","initialState","combineReducers","state","action","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uKAAaA,EAAc,SAACC,GAAD,OAAWA,EAAMC,UAAUC,OACzCC,EAAe,SAACH,GAAD,OAAWA,EAAMC,UAAUG,kB,OCD1CC,EAAW,WACXC,EAAc,cACdC,EAAc,cACdC,EAAkB,kBAClBC,EAAc,cACdC,EAAa,aCwCnB,SAASC,EAAUC,GACxB,MAAO,CACLC,KAAMH,EACNI,QAAS,CACPF,W,2BC5CAG,EAAgBC,IAAOC,IAAV,8CAIbC,EAAYF,IAAOG,MAAV,4VAeA,SAASC,IACtB,IAAMC,EAAWC,cACjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,OACE,cAACV,EAAD,UACE,cAACG,EAAD,CACEL,KAAK,OACLa,YAAY,cACZF,MAAOA,EACPG,SAAU,SAACC,GAAD,OAAOH,EAASG,EAAEC,OAAOL,QACnCM,WAAY,SAACF,GACG,UAAVA,EAAEG,MACJV,EDjCH,CACLR,KAAMR,EACNS,QAAS,CACPkB,KC8BuBR,KACjBC,EAAS,UChCrB,I,QAAMQ,EAAkBjB,IAAOC,IAAV,4OAWjB,SAACiB,GAAD,OACAA,EAAMC,aAAN,gBAEEC,EAFF,uBAGMC,EAHN,kIASMC,EATN,kyBA4CIC,EA5CJ,6FAoDEH,EAAqBpB,IAAOC,IAAV,uHAOlBqB,EAAWtB,IAAOC,IAAV,sLAUVoB,EAAcrB,IAAOC,IAAV,iIAQXuB,EAAmBxB,IAAOG,MAAV,+TAcdoB,EAAevB,IAAOC,IAAV,ugBA+BH,SAASwB,EAAT,GAA2B,IAARC,EAAO,EAAPA,KAChC,EAA0BnB,mBAASmB,EAAKV,MAAxC,mBAAOR,EAAP,KAAcC,EAAd,KACA,EAAsCF,oBAAS,GAA/C,mBAAOoB,EAAP,KAAoBC,EAApB,KACMvB,EAAWC,cAEjB,OACE,eAACW,EAAD,CAAiB,eAAcS,EAAKG,GAAIV,YAAaO,EAAKP,YAA1D,UACE,eAACC,EAAD,WACE,cAACE,EAAD,CAAUQ,QAAS,WF/HpB,IAAoBD,EEgIjBxB,GFhIiBwB,EEgIGH,EAAKG,GF/H1B,CACLhC,KAAMN,EACNO,QAAS,CACP+B,YE8HGF,EACC,cAACN,EAAD,CAAaU,cAAe,WAC1BH,GAAe,IADjB,SAGGF,EAAKV,OAGR,cAACQ,EAAD,CACEhB,MAAOA,EACPX,KAAK,OACLc,SAAU,SAACC,GAAD,OAAOH,EAASG,EAAEC,OAAOL,QACnCM,WAAY,SAACF,GF9HlB,IAAoBiB,EE+HC,UAAVjB,EAAEG,MACJV,GFhIWwB,EEgISH,EAAKG,GF/HhC,CACLhC,KAAMJ,EACNK,QAAS,CACP+B,KACAG,QE2HuCxB,MAC7BoB,GAAe,UAMzB,cAACL,EAAD,CAAcO,QAAS,WF/JtB,IAAoBD,EEgKjBxB,GFhKiBwB,EEgKGH,EAAKG,GF/J1B,CACLhC,KAAMP,EACNQ,QAAS,CACP+B,eGXN,I,MAAMI,EAAgBjC,IAAOC,IAAV,2GAMbiC,EAAqBlC,IAAOC,IAAV,kGAMlBkC,EAAcnC,IAAOC,IAAV,0NAYb,SAACiB,GAAD,OACAA,EAAMkB,SAAN,6DAOEC,EAAkBrC,IAAOC,IAAV,uFAMN,SAASqC,EAAT,GAAiC,IAAV1C,EAAS,EAATA,OAC9BS,EAAWC,cACjB,OACE,eAAC2B,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,CACEC,QAAkB,QAATxC,EACTkC,QAAS,WACPzB,EAASV,EAAU,SAHvB,iBAQA,cAACwC,EAAD,CACEC,QAAkB,WAATxC,EACTkC,QAAS,WACPzB,EAASV,EAAU,YAHvB,oBAQA,cAACwC,EAAD,CACEC,QAAkB,cAATxC,EACTkC,QAAS,WACPzB,EAASV,EAAU,eAHvB,yBASF,cAAC0C,EAAD,CAAiBP,QAAS,WACxBzB,EH3CC,CACLR,KAAML,KGyCJ,2BChEN,IAAM+C,EAAOvC,IAAOwC,KAAV,8RAaJC,EAAYzC,IAAOC,IAAV,8GAOTyC,EAAa1C,IAAOC,IAAV,yFAwDD0C,IChFXC,GACAC,GD+EWF,GA9Cf,WACE,IAAMzD,EAAQ4D,YAAY/D,GACpBa,EAASkD,YAAY3D,GAM3B,OAJA4D,IAAMC,WAAU,YARlB,SAAkCJ,GAChCK,OAAOC,aAAaC,QAAQ,QAASC,KAAKC,UAAUT,IAQlDU,CAAyB,CAAEpE,QAAOE,iBAAkBQ,MACnD,CAACV,EAAOU,IAGT,eAAC2C,EAAD,WACE,cAACE,EAAD,wBACA,cAACrC,EAAD,IAEa,QAAXR,EAAmBV,EAAMqE,KAAI,SAAC7B,GAC5B,OACE,cAACD,EAAD,CAEEC,KAAMA,GADDA,EAAKG,OAKC,WAAXjC,EAAsBV,EAAMqE,KAAI,SAAC7B,GACrC,IAAyB,IAArBA,EAAKP,YACP,OACE,cAACM,EAAD,CAEEC,KAAMA,GADDA,EAAKG,OAKb3C,EAAMqE,KAAI,SAAC7B,GACd,IAAyB,IAArBA,EAAKP,YACP,OACE,cAACM,EAAD,CAEEC,KAAMA,GADDA,EAAKG,OAMpB,cAACS,EAAD,CAAc1C,OAAQA,IACtB,cAAC8C,EAAD,wC,0BC7EFc,GAAS,EACTtE,GAAQ+D,OAAOC,aAAaO,QAAQ,UAAY,GAGhDvE,IAASkE,KAAKM,MAAMxE,IAAOA,MAAMyE,OAAS,GAC5Cf,GAAWQ,KAAKM,MAAMxE,IAAOA,MAC7BsE,GAASZ,GAAS,GAAGf,GAAK,EAC1BgB,GAAaO,KAAKM,MAAMxE,IAAOE,mBAE/BwD,GAAW,GACXC,GAAa,OAEf,IAAMe,GAAe,CACnB1E,MAAO0D,GACPxD,iBAAkByD,ICbLgB,oBAAgB,CAAC5E,UDgBjB,WAAqD,IAA/B6E,EAA8B,uDAAtBF,GAAcG,EAAQ,uCACjE,OAAQA,EAAOlE,MACb,KAAKR,EACH,OAAO,6BACFyE,GADL,IAEE5E,MAAM,CACJ,CACE2C,GAAI2B,KACJxC,KAAM+C,EAAOjE,QAAQkB,KACrBG,aAAa,IAJZ,oBAMA2C,EAAM5E,UAKf,KAAKI,EACH,OAAO,6BACFwE,GADL,IAEE5E,MAAO4E,EAAM5E,MAAMU,QAAO,SAAC8B,GAAD,OAAUA,EAAKG,KAAOkC,EAAOjE,QAAQ+B,QAInE,KAAKtC,EACH,OAAO,6BACFuE,GADL,IAEE5E,MAAO4E,EAAM5E,MAAMqE,KAAI,SAAC7B,GACtB,OAAOqC,EAAOjE,QAAQ+B,KAAOH,EAAKG,GAA3B,6BACEH,GADF,IACQP,aAAcO,EAAKP,cAC9BO,OAKV,KAAKlC,EACH,OAAO,6BACFsE,GADL,IAEE5E,MAAO,KAIX,KAAKO,EACH,OAAO,6BACFqE,GADL,IAEE5E,MAAO4E,EAAM5E,MAAMqE,KAAI,SAAC7B,GACtB,OAAOqC,EAAOjE,QAAQ+B,KAAOH,EAAKG,GAA3B,6BACEH,GADF,IACQV,KAAM+C,EAAOjE,QAAQkC,UAChCN,OAKV,KAAKhC,EACH,OAAO,6BACFoE,GADL,IAEE1E,iBAAkB2E,EAAOjE,QAAQF,SAIrC,QACE,OAAOkE,ME5EEE,gBACbC,GACAhB,OAAOiB,8BAAgCjB,OAAOiB,gCCO5BC,QACW,cAA7BlB,OAAOmB,SAASC,UAEe,UAA7BpB,OAAOmB,SAASC,UAEhBpB,OAAOmB,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,cAAC,IAAD,CAAUxF,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFyF,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,kB","file":"static/js/main.47e760ba.chunk.js","sourcesContent":["export const selectTodos = (store) => store.todoState.todos;\nexport const selectFilter = (store) => store.todoState.visibilityFilter;\n","export const ADD_TODO = 'add_todo';\nexport const DELETE_TODO = 'delete_todo';\nexport const TOGGLE_TODO = 'toggle_todo';\nexport const DELETE_ALL_TODO = 'delete_all_todo';\nexport const UPDATE_TODO = 'update_todo';\nexport const SET_FILTER = 'set_filter'\n","import { ADD_TODO, DELETE_TODO, TOGGLE_TODO, DELETE_ALL_TODO, UPDATE_TODO, SET_FILTER } from './actionTypes';\n\nexport function addTodo(name) {\n  return {\n    type: ADD_TODO,\n    payload: {\n      name,\n    },\n  };\n}\n\nexport function deleteTodo(id) {\n  return {\n    type: DELETE_TODO,\n    payload: {\n      id,\n    },\n  };\n}\n\nexport function toggleTodo(id) {\n  return {\n    type: TOGGLE_TODO,\n    payload: {\n      id,\n    },\n  };\n}\n\nexport function deleteAllTodo(id) {\n  return {\n    type: DELETE_ALL_TODO,\n  };\n}\n\nexport function updateTodo(id, content) {\n  return {\n    type: UPDATE_TODO,\n    payload: {\n      id,\n      content\n    }\n  };\n}\n\nexport function setFilter(filter) {\n  return {\n    type: SET_FILTER,\n    payload: {\n      filter\n    },\n  };\n}\n","import { useState } from 'react';\nimport styled from \"styled-components\";\nimport { useDispatch } from 'react-redux';\nimport { addTodo } from '../redux/actions';\n\nconst TodoInputForm = styled.div`\n  display: flex;\n`;\n\nconst TodoInput = styled.input`\n  outline: none;\n  border-top: solid 1px transparent;\n  border-right: solid 1px transparent;\n  border-bottom: solid 1px #eac100;\n  border-left: solid 1px transparent;\n  margin: 0 auto 20px auto;\n  flex: 1;\n  height: 40px;\n  background: #fff8d7;\n  font-size: 24px;\n  color: #977c00;\n  box-sizing: border-box;\n`;\n\nexport default function AddTodo() {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState('');\n  return (\n    <TodoInputForm>\n      <TodoInput\n        type=\"text\"\n        placeholder=\"Add todo...\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        onKeyPress={(e) => {\n          if (e.key === \"Enter\") {\n            dispatch(addTodo(value));\n            setValue('');\n          }\n        }}\n      ></TodoInput>\n    </TodoInputForm>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { deleteTodo, toggleTodo, updateTodo } from '../redux/actions';\nimport styled from \"styled-components\";\nimport { useState } from 'react';\n\nconst TodoItemWrapper = styled.div`\n  width: 100%;\n  height: 50px;\n  margin: 20px 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 24px;\n  position: relative;\n  box-sizing: border-box;\n\n  ${(props) =>\n    props.isCompleted &&\n    `\n    ${TodoContentWrapper} {\n      & ${TodoContent} {\n        text-decoration: line-through;\n        color: #dbc665;\n        transition: all 0.2s;\n      }\n\n      & ${Checkbox} {\n        border-color: #dbc665;\n        transition: all 0.2s;\n\n        &:before, &:after {\n          content: ''; \n          display: block;\n          position: absolute;\n          border-radius: 2px; \n          transform-origin: center center;\n        }\n\n        &:before{\n          width: 2px;\n          height: 10px;\n          top: 22px;\n          left: 8px;\n          transform: rotate(-45deg);\n          background: #dbc665;\n          z-index: 20;\n        }\n\n        &:after {\n          width: 2px;\n          height: 25px;\n          top: 9.5px;\n          left: 19.5px;\n          transform: translate(0, 0) rotate(-140deg);\n          background: #dbc665;\n          box-shadow: 0 0 0 3px #FFF8D7;\n          z-index: 10;\n        }\n      }\n    }\n\n    & ${ButtonDelete} {\n      &:after,\n      &:before {\n        background: #dbc665;\n      }\n    }\n  `}\n`;\nconst TodoContentWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 600px;\n`;\n\nconst Checkbox = styled.div`\n  width: 20px;\n  height: 20px;\n  border: solid 2px #977c00;\n  border-radius: 3px;\n  cursor: pointer;\n  transition: all 0.2s;\n  margin-right: 16px;\n`;\n\nlet TodoContent = styled.div`\n  color: #977c00;\n  flex: 1;\n  overflow: hidden;\n  text-align: left;\n  text-overflow: ellipsis;\n`;\n\nlet TodoContentInput = styled.input`\n  outline: none;\n  border-top: solid 1px transparent;\n  border-right: solid 1px transparent;\n  border-bottom: solid 1px #eac100;\n  border-left: solid 1px transparent;\n  flex: 1;\n  height: 40px;\n  background: #fff8d7;\n  font-size: 28px;\n  color: #67655c;\n  box-sizing: border-box;\n`;\n\nconst ButtonDelete = styled.div`\n  & {\n    width: 20px;\n    height: 20px;\n    position: absolute;\n    right: 0;\n    cursor: pointer;\n  }\n\n  &:after,\n  &:before {\n    content: \"\";\n    position: absolute;\n    right: 0px;\n    height: 20px;\n    width: 2px;\n    background: #977c00;\n    transition: all 0.2s;\n  }\n\n  &:after {\n    transform: translate(-10px, 0) rotate(-45deg);\n    transition: all 0.2s;\n  }\n\n  &:before {\n    transform: translate(-10px, 0) rotate(45deg);\n    transition: all 0.2s;\n  }\n`;\n\nexport default function TodoItem({todo}) {\n  const [value, setValue] = useState(todo.name);\n  const [inputToggle, setInputToggle] = useState(true);\n  const dispatch = useDispatch()\n\n  return (\n    <TodoItemWrapper data-todo-id={todo.id} isCompleted={todo.isCompleted}>\n      <TodoContentWrapper>\n        <Checkbox onClick={() => {\n          dispatch(toggleTodo(todo.id));\n        }} />\n        {inputToggle ? (\n          <TodoContent onDoubleClick={() => {\n            setInputToggle(false)\n          }}>\n            {todo.name}\n          </TodoContent>\n        ) : (\n          <TodoContentInput\n            value={value}\n            type=\"text\"\n            onChange={(e) => setValue(e.target.value)}\n            onKeyPress={(e) => {\n              if (e.key === \"Enter\") {\n                dispatch(updateTodo(todo.id, value));\n                setInputToggle(true);\n              }\n            }}\n          ></TodoContentInput>\n        )}\n      </TodoContentWrapper>\n      <ButtonDelete onClick={() => {\n          dispatch(deleteTodo(todo.id));\n        }}></ButtonDelete>\n    </TodoItemWrapper>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { setFilter, deleteAllTodo } from '../redux/actions';\nimport styled from \"styled-components\";\n\nconst BottomWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\n\nconst StateButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StateButton = styled.div`\n  border: 1px solid #977c00;\n  border-radius: 3px;\n  padding: 5px 8px;\n  box-sizing: border-box;\n  color: #977c00;\n  cursor: pointer;\n\n  & + & {\n    margin-left: 5px;\n  }\n\n  ${(props) =>\n    props.$active &&\n    `\n      background: #977c00;\n      color: white;\n    `}\n`;\n\nconst DeleteAllButton = styled.div`\n  cursor: pointer;\n  color: #8c8c8c;\n  font-size: 18px;\n`;\n\nexport default function FilterButton({filter}) {\n  const dispatch = useDispatch()\n  return (\n    <BottomWrapper>\n      <StateButtonWrapper>\n        <StateButton\n          $active={filter==='all'}\n          onClick={() => {\n            dispatch(setFilter('all'))\n          }}\n        >\n          All\n        </StateButton>\n        <StateButton\n          $active={filter==='active'}\n          onClick={() => {\n            dispatch(setFilter('active'))\n          }}\n        >\n          Active\n        </StateButton>\n        <StateButton\n          $active={filter==='completed'}\n          onClick={() => {\n            dispatch(setFilter('completed'))\n          }}\n        >\n          Complete\n        </StateButton>\n      </StateButtonWrapper>\n      <DeleteAllButton onClick={() => {\n        dispatch(deleteAllTodo())\n      }}> Clear All</DeleteAllButton>\n    </BottomWrapper>\n  );\n}\n","import React from 'react';\nimport styled from \"styled-components\";\nimport { useSelector } from 'react-redux';\nimport { selectTodos, selectFilter } from './redux/selectors';\nimport AddTodo from './components/AddTodo';\nimport TodoItem from './components/TodoItem';\nimport FilterButton from './components/FilterButton';\n\nconst Main = styled.main`\n  width: 700px;\n  height: auto;\n  margin: 80px auto;\n  background: #fff8d7;\n  text-align: center;\n  border: solid 1px #eac100;\n  border-radius: 10px;\n  box-shadow: 1.8px 2.4px 5px 0 rgb(0 0 0 / 30%);\n  box-sizing: border-box;\n  padding: 50px 30px;\n`;\n\nconst TodoTitle = styled.div`\n  width: 100%;\n  font-size: 55px;\n  box-sizing: border-box;\n  color: #5b4b00;\n`;\n\nconst RemarkWord = styled.div`\n  text-align: left;\n  color: #6d6a5c;\n  margin-top: 20px;\n`;\n\nfunction writeTodosToLocalStorage(todoData) {\n  window.localStorage.setItem(\"todos\", JSON.stringify(todoData));\n}\n\nfunction App() {\n  const todos = useSelector(selectTodos);\n  const filter = useSelector(selectFilter);\n\n  React.useEffect(() => {\n    writeTodosToLocalStorage({ todos, visibilityFilter: filter });\n  }, [todos, filter]);\n\n  return (\n    <Main>\n      <TodoTitle>Todo List</TodoTitle>\n      <AddTodo />\n      {\n        filter === 'all' ? todos.map((todo) => {\n          return (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n            />\n          );\n          // eslint-disable-next-line \n        }) : (filter === 'active' ? todos.map((todo) => {\n          if (todo.isCompleted === false)\n            return (\n              <TodoItem\n                key={todo.id}\n                todo={todo}\n              />\n            );\n            // eslint-disable-next-line   \n        }) : todos.map((todo) => {\n          if (todo.isCompleted === true)\n            return (\n              <TodoItem\n                key={todo.id}\n                todo={todo}\n              />\n            );   \n        })) \n      }\n      <FilterButton filter={filter} />\n      <RemarkWord>Double click to edit.</RemarkWord>\n    </Main>\n  );\n}\n\nexport default App;\n","import { ADD_TODO, DELETE_TODO, TOGGLE_TODO, DELETE_ALL_TODO, UPDATE_TODO, SET_FILTER } from '../actionTypes';\n\nlet todoId = 0;\nlet todos = window.localStorage.getItem(\"todos\") || \"\";\nlet todoData\nlet todoFilter\nif (todos && JSON.parse(todos).todos.length > 0) {\n  todoData = JSON.parse(todos).todos;\n  todoId = todoData[0].id + 1;\n  todoFilter = JSON.parse(todos).visibilityFilter\n} else {\n  todoData = [];\n  todoFilter = 'all'\n}\nconst initialState = {\n  todos: todoData,\n  visibilityFilter: todoFilter\n};\n\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO: {\n      return {\n        ...state,\n        todos: [\n          {\n            id: todoId++,\n            name: action.payload.name,\n            isCompleted: false,\n          },\n          ...state.todos,    \n        ],\n      };\n    }\n\n    case DELETE_TODO: {\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== action.payload.id),\n      };\n    }\n\n    case TOGGLE_TODO: {\n      return {\n        ...state,\n        todos: state.todos.map((todo) => {\n          return action.payload.id === todo.id\n            ? { ...todo, isCompleted: !todo.isCompleted }\n            : todo;\n        }),\n      };\n    }\n\n    case DELETE_ALL_TODO: {\n      return {\n        ...state,\n        todos: [],\n      };\n    }\n\n    case UPDATE_TODO: {\n      return {\n        ...state,\n        todos: state.todos.map((todo) => {\n          return action.payload.id === todo.id\n            ? { ...todo, name: action.payload.content }\n            : todo;\n        }),\n      }\n    }\n\n    case SET_FILTER: {\n      return {\n        ...state,\n        visibilityFilter: action.payload.filter\n      }\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from 'redux';\nimport todos from './todos';\n\nexport default combineReducers({todoState: todos});\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nexport default createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}